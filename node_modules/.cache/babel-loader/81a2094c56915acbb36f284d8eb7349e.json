{"ast":null,"code":"var _jsxFileName = \"/Users/williamstansbury/Desktop/CS185/test-app/src/Components/AddMovie.js\";\nimport React, { Component } from 'react';\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport { SRLWrapper } from 'simple-react-lightbox';\nimport ReactDOM from 'react-dom';\nimport config from './config.js';\n\nconst firebase = require('firebase');\n\nconst axios = require('axios');\n\nvar notGonnaWork;\nvar images = [];\nexport class AddMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: {},\n      MovieID: \"\"\n    };\n    this.handleChangeMovieID = this.handleChangeMovieID.bind(this);\n  }\n\n  componentDidMount() {\n    firebase.initializeApp(config); // let ref = firebase.database().ref('movies')\n\n    console.log(ref);\n    ref.on('value', snapshot => {\n      const movies = snapshot.val();\n      console.log(Object.values(movies)); // console.log(Object.values)\n\n      this.setState({\n        movies: Object.values(movies)\n      });\n      notGonnaWork = this.state;\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"update?\"); //only call set state here if it is wrapped in a condition\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n    //filp shouldUpdate in the onclick function\n    //react form / submit button\n\n    if (this.state.shouldUpdate !== prevState.shouldUpdate) {\n      let ref = firebase.database().ref('movies');\n      ref.on('value', snapshot => {\n        const data = snapshot.val();\n        this.setState({\n          movies: Object.values(data)\n        });\n      });\n    }\n  }\n\n  handleChangeMovieID(event) {\n    this.setState({\n      movieIDValue: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    var jsonBody = {\n      \"movieID\": this.state.movieValue\n    };\n    var id = this.state.movieValue;\n    firebase.database().ref('movies').push().set(id);\n    alert('Movie Submitted!');\n    event.preventDefault();\n    this.setState({\n      shouldUpdate: !this.state.shouldUpdate\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ScrollUpButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    }, \"AddMovie\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 6\n      }\n    }, \"Movie ID:\", /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChangeMovieID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }\n    }))));\n  }\n\n}\nexport default AddMovie;","map":{"version":3,"sources":["/Users/williamstansbury/Desktop/CS185/test-app/src/Components/AddMovie.js"],"names":["React","Component","ScrollUpButton","SRLWrapper","ReactDOM","config","firebase","require","axios","notGonnaWork","images","AddMovie","constructor","props","state","movies","MovieID","handleChangeMovieID","bind","componentDidMount","initializeApp","console","log","ref","on","snapshot","val","Object","values","setState","componentDidUpdate","prevProps","prevState","shouldUpdate","database","data","event","movieIDValue","target","value","handleSubmit","jsonBody","movieValue","id","push","set","alert","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport { SRLWrapper } from 'simple-react-lightbox';\nimport ReactDOM from 'react-dom'\nimport config from './config.js'\nconst firebase = require('firebase');\nconst axios = require('axios');\n\nvar notGonnaWork;\n\nvar images = [];\n\nexport class AddMovie extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {movies: {},\n\t\t\tMovieID: \"\",\n\t\t}\n\t\tthis.handleChangeMovieID = this.handleChangeMovieID.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tfirebase.initializeApp(config)\n\t\t// let ref = firebase.database().ref('movies')\n\t\tconsole.log(ref)\n\t\tref.on('value', snapshot => {\n\t\t\tconst movies = snapshot.val()\n\t\t\tconsole.log(Object.values(movies))\n\n\t\t\t// console.log(Object.values)\n\t\t\tthis.setState({movies: Object.values(movies)})\n\t\t\tnotGonnaWork = this.state\n\t\t})\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot){\n\t\tconsole.log(\"update?\")\n\t\t\n\t\t//only call set state here if it is wrapped in a condition\n\t\t//if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n\n\t\t//filp shouldUpdate in the onclick function\n\n\t\t//react form / submit button\n\t\tif(this.state.shouldUpdate !== prevState.shouldUpdate){\n\t\tlet ref = firebase.database().ref('movies')\n\t\tref.on('value', snapshot => {\n\t\t\tconst data = snapshot.val()\n\t\t\tthis.setState({movies: Object.values(data)})\n\t\t})\n\n\t\t}\n\t}\n\n\thandleChangeMovieID(event) {\n\t    this.setState({movieIDValue: event.target.value});\n\t}\n\n\thandleSubmit(event) {\n\t  \tvar jsonBody = {\n\t  \t\t\"movieID\": this.state.movieValue\n\t\t}\n\n\t\tvar id = this.state.movieValue\n\t  \t\t\n\t\tfirebase.database().ref('movies').push().set(id)\n\n\t\talert('Movie Submitted!');\n\t\t   \n\t  \tevent.preventDefault();\n\t  \tthis.setState({shouldUpdate: !this.state.shouldUpdate})\n\t  }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ScrollUpButton />\n\t\t\t\t<header>\n\t\t\t\t\t<h1>AddMovie</h1>\n\t\t\t\t</header>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tMovie ID:\n\t\t\t\t\t\t<label>\n\t\t\t\t\t        <input type=\"text\" value={this.state.value} onChange={this.handleChangeMovieID} />\n\t\t\t\t\t    </label>\n\t\t\t\t\t    <input type=\"submit\" value=\"Submit\" />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AddMovie;"]},"metadata":{},"sourceType":"module"}