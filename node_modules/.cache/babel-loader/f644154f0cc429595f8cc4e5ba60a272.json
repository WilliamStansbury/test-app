{"ast":null,"code":"var _jsxFileName = \"/Users/williamstansbury/Desktop/CS185/test-app/src/Components/Messages.js\";\nimport React, { Component } from 'react';\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport config from './config.js';\n\nconst firebase = require('firebase');\n\nconst sample = [\"hi\", \"hello\", \"how are you\"];\nexport class Messages extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    firebase.initializeApp(config);\n    let ref = firebase.database().ref('sampleData');\n    ref.on('value', snapshot => {\n      const data = snapshot.val();\n      this.setState({\n        data: data\n      });\n      console.log(\"Console, can you see this?\");\n      console.log(data);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    //only call set state here if it is wrapped in a condition\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n    if (this.state.shouldUpdate !== prevState.shouldUpdate) {//same code as above to retrieve the data \n    }\n  }\n\n  render() {\n    console.log(\"can you see this??\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ScrollUpButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }\n    }, \"Messages\"), sample.map((s, index) => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, s))));\n  }\n\n}\nexport default Messages;","map":{"version":3,"sources":["/Users/williamstansbury/Desktop/CS185/test-app/src/Components/Messages.js"],"names":["React","Component","ScrollUpButton","config","firebase","require","sample","Messages","constructor","props","state","data","componentDidMount","initializeApp","ref","database","on","snapshot","val","setState","console","log","componentDidUpdate","prevProps","prevState","shouldUpdate","render","map","s","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,OAAP,EAAgB,aAAhB,CAAf;AACA,OAAO,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAEvCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AACA;;AACDC,EAAAA,iBAAiB,GAAE;AAClBR,IAAAA,QAAQ,CAACS,aAAT,CAAuBV,MAAvB;AACA,QAAIW,GAAG,GAAGV,QAAQ,CAACW,QAAT,GAAoBD,GAApB,CAAwB,YAAxB,CAAV;AACAA,IAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgBC,QAAQ,IAAI;AAC3B,YAAMN,IAAI,GAAGM,QAAQ,CAACC,GAAT,EAAb;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,KALD;AAMA;;AACDW,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBP,QAAvB,EAAgC;AACjD;AACA;AACA,QAAG,KAAKP,KAAL,CAAWe,YAAX,KAA4BD,SAAS,CAACC,YAAzC,EAAsD,CACrD;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACRN,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,EAGEf,MAAM,CAACqB,GAAP,CAAW,CAACC,CAAD,EAAGC,KAAH,kBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACED,CADF,CADA,CAHF,CADD,CADD;AAcA;;AAxCsC;AA0CxC,eAAerB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport config from './config.js'\nconst firebase = require('firebase');\n\nconst sample = [\"hi\", \"hello\", \"how are you\"];\nexport class Messages extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {data: {}}\n\t}\n\tcomponentDidMount(){\n\t\tfirebase.initializeApp(config)\n\t\tlet ref = firebase.database().ref('sampleData')\n\t\tref.on('value', snapshot => {\n\t\t\tconst data = snapshot.val()\n\t\t\tthis.setState({data: data})\n\t\t\tconsole.log(\"Console, can you see this?\")\n\t\t\tconsole.log(data)\n\t\t})\n\t}\n\tcomponentDidUpdate(prevProps, prevState, snapshot){\n\t\t//only call set state here if it is wrapped in a condition\n\t\t//if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n\t\tif(this.state.shouldUpdate !== prevState.shouldUpdate){\n\t\t\t//same code as above to retrieve the data \n\t\t}\n\t}\n\n\trender() {\n\t\tconsole.log(\"can you see this??\")\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header>\n\t\t\t\t\t<ScrollUpButton />\n\t\t\t\t\t<h1>Messages</h1>\n\t\t\t\t\t{sample.map((s,index) => (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{s}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t))}\n\t\t\t\t</header>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t);\n\t}\n}\nexport default Messages;"]},"metadata":{},"sourceType":"module"}