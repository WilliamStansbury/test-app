{"ast":null,"code":"var _jsxFileName = \"/Users/williamstansbury/Desktop/CS185/test-app/src/Components/Messages.js\";\nimport React, { Component } from 'react';\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport config from './config.js';\n\nconst firebase = require('firebase');\n\nconst sample = [\"hi\", \"hello\", \"how are you\"];\nvar notGonnaWork;\nexport class Messages extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    firebase.initializeApp(config);\n    let ref = firebase.database().ref('data');\n    console.log(ref);\n    ref.on('value', snapshot => {\n      const data = snapshot.val();\n      console.log(Object.values(data.data)); // console.log(Object.values)\n\n      this.setState({\n        data: Object.values(data.data)\n      });\n      notGonnaWork = this.state;\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"update?\"); //only call set state here if it is wrapped in a condition\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n    //filp shouldUpdate in the onclick function\n    //react form / submit button\n\n    if (this.state.shouldUpdate !== prevState.shouldUpdate) {\n      var jsonBody = {\n        \"bio\": \"this is a bio\",\n        \"can_post\": true,\n        \"date\": \"date\",\n        \"email\": \"email\",\n        \"message\": \"me\",\n        \"name\": \"name\"\n      };\n      firebase.database().ref('data').push().set(jsonBody);\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ScrollUpButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }\n    }, \"Messages\"), console.log(Object.values(this.state.data)), Object.values(this.state.data).map((s, index) => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }\n    }, s.bio, s.name, s.message))), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\nexport default Messages;","map":{"version":3,"sources":["/Users/williamstansbury/Desktop/CS185/test-app/src/Components/Messages.js"],"names":["React","Component","ScrollUpButton","config","firebase","require","sample","notGonnaWork","Messages","constructor","props","state","data","handleChange","bind","handleSubmit","componentDidMount","initializeApp","ref","database","console","log","on","snapshot","val","Object","values","setState","componentDidUpdate","prevProps","prevState","shouldUpdate","jsonBody","push","set","event","value","target","alert","preventDefault","render","map","s","index","bio","name","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport config from './config.js'\nconst firebase = require('firebase');\n\nconst sample = [\"hi\", \"hello\", \"how are you\"];\nvar notGonnaWork;\nexport class Messages extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {data: {}}\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\tcomponentDidMount(){\n\t\tfirebase.initializeApp(config)\n\t\tlet ref = firebase.database().ref('data')\n\t\tconsole.log(ref)\n\t\tref.on('value', snapshot => {\n\t\t\tconst data = snapshot.val()\n\t\t\tconsole.log(Object.values(data.data))\n\n\t\t\t// console.log(Object.values)\n\t\t\tthis.setState({data: Object.values(data.data)})\n\t\t\tnotGonnaWork = this.state\n\t\t})\n\t}\n\tcomponentDidUpdate(prevProps, prevState, snapshot){\n\t\tconsole.log(\"update?\")\n\t\t\n\t\t//only call set state here if it is wrapped in a condition\n\t\t//if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n\n\t\t//filp shouldUpdate in the onclick function\n\n\t\t//react form / submit button\n\t\tif(this.state.shouldUpdate !== prevState.shouldUpdate){\n\n\t\t\tvar jsonBody = {\n\t\t\t\t\"bio\":\"this is a bio\",\n\t\t\t\t\"can_post\": true,\n\t\t\t\t\"date\" : \"date\",\n\t\t\t\t\"email\": \"email\",\n\t\t\t\t\"message\": \"me\",\n\t\t\t\t\"name\": \"name\"\n\t\t\t}\n\t\t\tfirebase.database().ref('data').push().set(jsonBody)\n\t\t}\n\t}\n\n\t  handleChange(event) {\n\t    this.setState({value: event.target.value});\n\t  }\n\n\t  handleSubmit(event) {\n\t    alert('A name was submitted: ' + this.state.value);\n\t    event.preventDefault();\n\t  }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header>\n\t\t\t\t\t<ScrollUpButton />\n\t\t\t\t\t<h1>Messages</h1>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(Object.values(this.state.data))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tObject.values(this.state.data).map((s,index) => (\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{s.bio}\n\t\t\t\t\t\t\t\t{s.name}\n\t\t\t\t\t\t\t\t{s.message}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</header>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\nexport default Messages;"]},"metadata":{},"sourceType":"module"}