{"ast":null,"code":"var _jsxFileName = \"/Users/williamstansbury/Desktop/CS185/test-app/src/Components/Messages.js\";\nimport React, { Component } from 'react';\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport config from './config.js';\n\nconst firebase = require('firebase');\n\nconst sample = [\"hi\", \"hello\", \"how are you\"];\nvar notGonnaWork;\nexport class Messages extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {}\n    };\n    console.log(\"constructor\");\n  }\n\n  componentDidMount() {\n    firebase.initializeApp(config);\n    let ref = firebase.database().ref('data');\n    console.log(ref);\n    ref.on('value', snapshot => {\n      const data = snapshot.val();\n      this.setState({\n        data: data\n      });\n      notGonnaWork = this.state;\n      console.log(this.state);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"update?\"); //only call set state here if it is wrapped in a condition\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n\n    if (this.state.shouldUpdate !== prevState.shouldUpdate) {\n      const data = snapshot.val();\n      this.setState({\n        data: data\n      });\n      notGonnaWork = this.state; //same code as above to retrieve the data \n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ScrollUpButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }\n    }, \"Messages\"), console.log(Object.values(this.state)), Object.values(this.state).map((index, s) => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }\n    }, console.log(s), s.value, \"}\"))));\n  }\n\n}\nexport default Messages;","map":{"version":3,"sources":["/Users/williamstansbury/Desktop/CS185/test-app/src/Components/Messages.js"],"names":["React","Component","ScrollUpButton","config","firebase","require","sample","notGonnaWork","Messages","constructor","props","state","data","console","log","componentDidMount","initializeApp","ref","database","on","snapshot","val","setState","componentDidUpdate","prevProps","prevState","shouldUpdate","render","Object","values","map","index","s","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,OAAP,EAAgB,aAAhB,CAAf;AACA,IAAIC,YAAJ;AACA,OAAO,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAEvCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA;;AACDC,EAAAA,iBAAiB,GAAE;AAClBX,IAAAA,QAAQ,CAACY,aAAT,CAAuBb,MAAvB;AACA,QAAIc,GAAG,GAAGb,QAAQ,CAACc,QAAT,GAAoBD,GAApB,CAAwB,MAAxB,CAAV;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAA,IAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgBC,QAAQ,IAAI;AAC3B,YAAMR,IAAI,GAAGQ,QAAQ,CAACC,GAAT,EAAb;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACAL,MAAAA,YAAY,GAAG,KAAKI,KAApB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACA,KALD;AAMA;;AACDY,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBL,QAAvB,EAAgC;AACjDP,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EADiD,CAEjD;AACA;;AACA,QAAG,KAAKH,KAAL,CAAWe,YAAX,KAA4BD,SAAS,CAACC,YAAzC,EAAsD;AACrD,YAAMd,IAAI,GAAGQ,QAAQ,CAACC,GAAT,EAAb;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACAL,MAAAA,YAAY,GAAG,KAAKI,KAApB,CAHqD,CAIrD;AACA;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,EAIGd,OAAO,CAACC,GAAR,CAAYc,MAAM,CAACC,MAAP,CAAc,KAAKlB,KAAnB,CAAZ,CAJH,EAMGiB,MAAM,CAACC,MAAP,CAAc,KAAKlB,KAAnB,EAA0BmB,GAA1B,CAA8B,CAACC,KAAD,EAAOC,CAAP,kBAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEnB,OAAO,CAACC,GAAR,CAAYkB,CAAZ,CADF,EAEEA,CAAC,CAACC,KAFJ,MADA,CANH,CADD,CADD;AAmBA;;AAlDsC;AAoDxC,eAAezB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport config from './config.js'\nconst firebase = require('firebase');\n\nconst sample = [\"hi\", \"hello\", \"how are you\"];\nvar notGonnaWork;\nexport class Messages extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {data: {}}\n\t\tconsole.log(\"constructor\")\n\t}\n\tcomponentDidMount(){\n\t\tfirebase.initializeApp(config)\n\t\tlet ref = firebase.database().ref('data')\n\t\tconsole.log(ref)\n\t\tref.on('value', snapshot => {\n\t\t\tconst data = snapshot.val()\n\t\t\tthis.setState({data: data})\n\t\t\tnotGonnaWork = this.state\n\t\t\tconsole.log(this.state)\n\t\t})\n\t}\n\tcomponentDidUpdate(prevProps, prevState, snapshot){\n\t\tconsole.log(\"update?\")\n\t\t//only call set state here if it is wrapped in a condition\n\t\t//if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n\t\tif(this.state.shouldUpdate !== prevState.shouldUpdate){\n\t\t\tconst data = snapshot.val()\n\t\t\tthis.setState({data: data})\n\t\t\tnotGonnaWork = this.state\n\t\t\t//same code as above to retrieve the data \n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header>\n\t\t\t\t\t<ScrollUpButton />\n\t\t\t\t\t<h1>Messages</h1>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(Object.values(this.state))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{Object.values(this.state).map((index,s) => (\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{console.log(s)}\n\t\t\t\t\t\t\t\t{s.value}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</header>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Messages;"]},"metadata":{},"sourceType":"module"}